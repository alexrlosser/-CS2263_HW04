/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs2263.HW4;

import com.google.common.graph.MutableNetwork;
import com.google.common.graph.Network;
import com.google.common.graph.NetworkBuilder;

public class App {

    public static void main(String[] args) {

        RelationshipVisitor relVisit = new RelationshipVisitor();

        //Create people
        Person p1 = new Person(29, "Mary", "Buck");
        Person p2 = new Person(33, "Harry", "Buck");
        Person p3 = new Person(25, "Ken", "Doe");
        Person p4 = new Person(27, "Karlie", "Doe");
        Person p5 = new Person(44, "Jerry", "Cann");

        //Create relations

            //Harry & Mary are Married
        p1.addRelation("married to", p2);
        p2.addRelation("married to", p1);

            //Ken & Karlie are married
        p3.addRelation("married to", p4);
        p4.addRelation("married to", p3);

            //Karlie and Jerry are Coworkers
        p4.addRelation("coworkers with", p5);
        p5.addRelation("coworkers with", p4);

            //Mary and Jerry are coworkers
        p1.addRelation("coworkers with", p5);
        p5.addRelation("coworkers with", p1);

            //Mary and Karlie are coworkers
        p1.addRelation("coworkers with", p4);
        p4.addRelation("coworkers with", p1);

        //Print relations
        System.out.println(p1.accept(relVisit));
        System.out.println(p2.accept(relVisit));
        System.out.println(p3.accept(relVisit));
        System.out.println(p4.accept(relVisit));
        System.out.println(p5.accept(relVisit));

        //Graphs
        MutableNetwork<Person, String> networkList = NetworkBuilder.directed().build();

        networkList.addNode(p1);
        networkList.addNode(p2);
        networkList.addNode(p3);
        networkList.addNode(p4);
        networkList.addNode(p5);

        networkList.addEdge(p1, p2, (p1.name() + " is married to " + p2.name()));
        networkList.addEdge(p3, p4, (p3.name() + " is married to " + p4.name()));
        networkList.addEdge(p4, p5, (p4.name() + " is coworkers with " + p5.name()));
        networkList.addEdge(p1, p5, (p1.name() + " is coworkers with " + p5.name()));
        networkList.addEdge(p1, p4, (p1.name() + " is coworkers with " + p4.name()));

        //System.out.println(networkList.asGraph().toString());

        int married = 0;
        int coworkers = 0;

        for (String edge : networkList.edges()) {
            System.out.println(edge);
            if(edge.contains("married")) {
                married++;
            }
            if(edge.contains("coworker")) {
                coworkers++;
            }
        }

        System.out.println("");
        System.out.println("Coworkers: " + coworkers);
        System.out.println("Married: " + married);

    }
}
